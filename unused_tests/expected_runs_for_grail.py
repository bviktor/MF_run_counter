import datetime as dt
import math
from scipy.integrate import quad


def expected_runs_to_complete(item_odds, bosses_run, mf, hork_chance, hork_mf=None):
    if hork_mf is None:
        hork_mf = mf - 120

    avg_unique_mf = (mf * 250 // (250 + mf) + hork_mf * 250 // (250 + hork_mf) * hork_chance) / (1 + hork_chance)
    mf_odds = [x / (1 + avg_unique_mf / 100) for x in item_odds]

    def integrand(t):
        prod = 1
        for p in mf_odds:
            prod *= 1 - math.exp(-1 / p * t)
        return 1 - prod

    return quad(integrand, 0, 1e9)[0] / (bosses_run * (1 + hork_chance))


reduced_list = [
    1068141, 309271, 308494, 308494, 214346, 205662, 205662, 185718, 133518, 124992, 118682, 118682, 118682, 118682,
    108806, 102831, 102831, 102831, 102831, 102831, 102831, 102831, 102831, 256036, 162064, 161386, 125836, 125836,
    114894, 114894, 377318, 157028,
]

full_list = [
    1068141, 771066, 768618, 766170, 502342, 431139, 399812, 399812, 399812, 399812, 397274, 397274, 397274, 377318,
    339163, 339163, 339163, 309271, 308494, 308494, 287426, 257022, 257022, 256036, 255390, 255390, 255390, 216446,
    216446, 215289, 214346, 205662, 205662, 196259, 196259, 196259, 185718, 183953, 183953, 183953, 183953, 183953,
    183953, 183953, 183953, 177169, 173329, 172456, 172456, 172456, 172456, 172456, 172456, 172456, 172456, 162064,
    161386, 159450, 158549, 157028, 151976, 151976, 151976, 151976, 150703, 150703, 136324, 135560, 133518, 133450,
    129038, 125836, 125836, 124992, 123735, 123735, 123515, 123515, 122060, 118682, 118682, 118682, 118682, 114894,
    114894, 113054, 113054, 108806, 102831, 102831, 102831, 102831, 102831, 102831, 102831, 102831, 100747, 94024,
    93765, 93765, 93506, 93506, 93506, 93506, 92123, 92123, 89508, 89508, 89282, 88888, 87128, 87115, 86890, 86228,
    86055, 86055, 84854, 84382, 81498, 81498, 80397, 75464, 74241, 73683, 73490, 73490, 73490, 72902, 72079, 72079,
    72079, 71675, 71675, 71675, 71675, 68147, 66983, 66844, 66438, 66438, 66438, 66438, 66062, 66062, 65920, 65920,
    65920, 65765, 65560, 65414, 65414, 65414, 64009, 63240, 63048, 63048, 63048, 62918, 59303, 59303, 59303, 59083,
    58008, 57619, 57124, 56800, 55862, 55862, 55862, 55544, 55544, 55544, 55544, 55109, 55109, 54914, 54914, 54822,
    54822, 54742, 54742, 54742, 54742, 54569, 53150, 53150, 53150, 53000, 52850, 52850, 52850, 51684, 51467, 51337,
    51207, 51207, 51106, 51106, 50694, 48086, 48086, 48086, 47828, 47704, 47309, 47309, 47189, 47189, 47189, 47137,
    45542, 45441, 45441, 45314, 45314, 45297, 45297, 45187, 45187, 45187, 45187, 44607, 44607, 44607, 44483, 44483,
    44360, 44360, 44360, 43699, 43567, 43477, 43362, 43251, 43251, 43247, 43114, 43013, 43013, 43013, 42762, 41781,
    41664, 41664, 41289, 41289, 41289, 41172, 41054, 41054, 41054, 41054, 40749, 39552, 39552, 39552, 39444, 39394,
    39336, 39336, 39051, 38945, 38945, 37250, 36990, 36990, 36990, 36989, 36171, 36131, 36130, 36130, 36071, 36071,
    36071, 35978, 35977, 35977, 35903, 35903, 34854, 34785, 34666, 34589, 34589, 34589, 34563, 34490, 34390, 34390,
    34390, 33916, 33916, 33566, 32712, 32712, 32621, 30887, 30887, 30887, 30887, 30887, 30797, 30797, 30766, 30708,
    30708, 30708, 30708, 30683, 30599, 29715, 29715, 29629, 29629, 29629, 29629, 29544, 29544, 29544, 29544, 29544,
    29492, 29038, 28963, 28888, 28428, 28226, 28226, 28226, 28226, 28037, 28037, 28037, 28037, 28037, 28037, 27875,
    27672, 27631, 27589, 27518, 27518, 27518, 27507, 27507, 27433, 27433, 27433, 27433, 26450, 26100, 26081, 26081,
    26081, 25961, 25880, 25880, 25880, 25860, 25561, 25450, 25400, 25313, 25313, 24981, 23159, 23159, 23159, 23159,
    23089, 23089, 22994, 22858, 22787, 22787, 22716, 22716, 22716, 22645, 22611, 22611, 22588, 22588, 22328, 22328,
    22328, 22263, 21937, 21930, 21930, 21921, 21857, 21771, 21771, 21058, 21020, 21020, 20997, 20935, 20644, 19754,
    19753, 19753, 19753, 19753, 19636, 19636, 19260, 19136, 18933, 18933, 18933, 18877, 18877, 18877, 17824, 17824,
    17824, 17824, 17348, 17232, 17035, 17035, 16983, 16983, 16931, 16931, 16931, 16930, 16786, 16785, 16536, 16352,
    16352, 16209, 16091, 16068, 15580, 15474, 14566, 14522, 14522, 14522, 14478, 14452, 14254, 14254, 14254, 14211,
    14211, 14169, 14169, 13927, 13927, 13927, 13927, 13927, 13927, 13842, 13842, 13842, 13497, 13496, 12885, 12885,
    11084, 10687, 10687, 10604, 10604, 10511, 10511, 10511, 10510, 10510, 9877, 9877, 8912, 8912, 8912, 8642, 8500,
    8176, 7678, 7678, 7312, 7283, 7269, 6581, 6581, 6581, 5469, 5469, 5356, 5356, 5356, 5356, 5313, 3115, 2798
]

bosses_run = 8.35
mf = 706
hork_mf = mf - 120
hork = 0.55

avg_runtime = 58.5
hours_playtime_a_day = 1


reduced = expected_runs_to_complete(item_odds=reduced_list, bosses_run=bosses_run, mf=mf, hork_chance=hork, hork_mf=hork_mf)
full = expected_runs_to_complete(item_odds=full_list, bosses_run=bosses_run, mf=mf, hork_chance=hork, hork_mf=hork_mf)

print(f'Bosses/run: {bosses_run}\nMF: {mf}\nHork MF: {hork_mf}\nHork: {int(hork*100)}%\nAvg runtime: {avg_runtime}\nHours playtime/day: {hours_playtime_a_day}\n')

print('Expected runs to complete grail: {:,.0f}'.format(reduced))
print(f'Expected playtime to complete: {round(reduced*avg_runtime/3600,2)} hours')
print(f'Expected date of completion: {dt.date.today() + dt.timedelta(reduced*avg_runtime/3600)/hours_playtime_a_day}')


# print('')
# print('Expected number of runs to complete grail in lvl 85 areas only (all uniques and sets)\n{:,.0f}'.format(full))